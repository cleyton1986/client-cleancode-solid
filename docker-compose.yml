version: "3.8"
services:

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - "6831:6831/udp"  # Porta para receber spans via UDP
      - "16686:16686"    # Porta da interface web do Jaeger
    networks:
      - api-network

  api:
    build: .
    ports:
      - "8000:3333"
    depends_on:
      - db
      - jaeger
    networks:
      - api-network

  db:
    image: postgres
    environment:
      POSTGRES_DB: devdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    networks:
      - api-network      

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@example.com"
      PGADMIN_DEFAULT_PASSWORD: "admin"
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "5050:80"  # pgAdmin acessível na porta 5050 do host
    depends_on:
      - db
    networks:
      - api-network

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./infra/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana
    ports:
      - "3333:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin # Defina sua própria senha aqui

  sonarqube:
    image: sonarqube:latest
    ports:
      - "9000:9000"
    environment:
      SONARQUBE_JDBC_URL: jdbc:postgresql://db:5432/sonar
      SONARQUBE_JDBC_USERNAME: sonar
      SONARQUBE_JDBC_PASSWORD: sonar_password
    depends_on:
      - db
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_extensions:/opt/sonarqube/extensions
    networks:
      - api-network

  sonar-scanner:
    image: sonarsource/sonar-scanner-cli:latest
    depends_on:
      - sonarqube
    volumes:
      - ./:/usr/src  
    networks:
      - api-network   
   
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    networks:
      - api-network
    depends_on:
      - api
      - db      

volumes:
  sonarqube_data:
  sonarqube_logs:
  sonarqube_extensions:      

networks:
  api-network:
    driver: bridge

